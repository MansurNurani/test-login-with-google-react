{"version":3,"sources":["Login.js","App.js","reportWebVitals.js","index.js"],"names":["clientId","Login","useState","showloginButton","setShowloginButton","showlogoutButton","setShowlogoutButton","profileObj","setProfileObj","userBox","name","familyName","src","imageUrl","buttonText","onSuccess","res","console","log","onFailure","cookiePolicy","isSignedIn","onLogoutSuccess","onClick","alert","givenName","JSON","stringify","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAGMA,EAAW,0EAyEFC,MAtEf,WAEI,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KACA,EAAgDF,oBAAS,GAAzD,mBAAOG,EAAP,KAAyBC,EAAzB,KACA,EAAoCJ,mBAAS,MAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KA6BMC,EAAW,gCACZF,GAAc,cAAgBA,EAAWG,KAAK,uBAC9CH,GAAc,aAAeA,EAAWI,WAAW,uBACpD,qBAAKC,IAAKL,GAAcA,EAAWM,cAGvC,OACI,gCACKV,GACG,cAAC,cAAD,CACIH,SAAUA,EACVc,WAAW,UACXC,UAxCO,SAACC,GACpBC,QAAQC,IAAI,iBAAkBF,EAAIT,YAClCH,GAAmB,GACnBE,GAAoB,GACpBE,EAAcQ,EAAIT,aAqCNY,UAlCO,SAACH,GACpBC,QAAQC,IAAI,gBAAiBF,IAkCjBI,aAAc,qBACdC,YAAY,IAGnBhB,GACG,cAAC,eAAD,CACIL,SAAUA,EACVc,WAAW,WACXQ,gBAvCS,WAGrBlB,GAAmB,GACnBE,GAAoB,GACpBE,EAAc,SAsCV,uBACCD,GAAcE,EACf,uBACA,wBAAQc,QArCI,WACZhB,EACAiB,MAAMjB,EAAWkB,WAGjBD,MAAM,+EAgCN,uBACA,uBACA,uBACA,uBACCjB,GAAc,OAASmB,KAAKC,UAAUpB,OCrDpCqB,MARf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,cAAC,EAAD,OCFSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa2a54dd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\r\n\r\nconst clientId = \"17912434840-29tt5r5q6g6pq6p7l2r7mio0532apqvt.apps.googleusercontent.com\";\r\n\r\n\r\nfunction Login() {\r\n\r\n    const [showloginButton, setShowloginButton] = useState(true);\r\n    const [showlogoutButton, setShowlogoutButton] = useState(false);\r\n    const [profileObj, setProfileObj] = useState(null);\r\n    const onLoginSuccess = (res) => {\r\n        console.log('Login Success:', res.profileObj);\r\n        setShowloginButton(false);\r\n        setShowlogoutButton(true);\r\n        setProfileObj(res.profileObj);\r\n    };\r\n\r\n    const onLoginFailure = (res) => {\r\n        console.log('Login Failed:', res);\r\n    };\r\n\r\n    const onSignoutSuccess = () => {\r\n        //alert(\"You have been logged out successfully\");\r\n        //console.clear();\r\n        setShowloginButton(true);\r\n        setShowlogoutButton(false);\r\n        setProfileObj(null);\r\n\r\n    };\r\n\r\n    const handleClick = () => {\r\n        if (profileObj) {\r\n            alert(profileObj.givenName);\r\n        }\r\n        else {\r\n            alert(\"کسی لاگین نیست\");\r\n        }\r\n    }\r\n    const userBox = (<div>\r\n        {profileObj && \"First Name:\" + profileObj.name}<br />\r\n        {profileObj && \"Last Name:\" + profileObj.familyName}<br />\r\n        <img src={profileObj && profileObj.imageUrl} />\r\n    </div>);\r\n\r\n    return (\r\n        <div>\r\n            {showloginButton &&\r\n                <GoogleLogin\r\n                    clientId={clientId}\r\n                    buttonText=\"Sign In\"\r\n                    onSuccess={onLoginSuccess}\r\n                    onFailure={onLoginFailure}\r\n                    cookiePolicy={'single_host_origin'}\r\n                    isSignedIn={true}\r\n                />}\r\n\r\n            {showlogoutButton &&\r\n                <GoogleLogout\r\n                    clientId={clientId}\r\n                    buttonText=\"Sign Out\"\r\n                    onLogoutSuccess={onSignoutSuccess}\r\n                >\r\n                </GoogleLogout>\r\n            }\r\n            <hr />\r\n            {profileObj && userBox}\r\n            <hr />\r\n            <button onClick={handleClick}>Who am I?</button>\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n            {profileObj && \"aaa:\" + JSON.stringify(profileObj)}\r\n        </div>\r\n    );\r\n}\r\nexport default Login;","import './App.css';\nimport GoogleLogin from 'react-google-login';\nimport { GoogleLogout } from 'react-google-login';\nimport Login from './Login';\n\nconst responseGoogle = (response) => {\n  console.log(\"aaa\", response);\n}\nconst logOut = () => {\n  console.log(\"logout\");\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Login />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}